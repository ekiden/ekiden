syntax = "proto3";

package enclave_rpc;

message Request {
    // Request method.
    string method = 1;
    // Payload (must be valid Protocol Buffers, based on given method).
    bytes payload = 2;
}

message Error {
    // Error message.
    string message = 1;
}

message Response {
    enum Code {
        INVALID = 0;

        // 2xx indicades success.
        SUCCESS = 200;

        // 4xx indicates errors.
        ERROR = 400;
        ERROR_BAD_REQUEST = 401;
        ERROR_METHOD_NOT_FOUND = 402;
    }
    // Response code.
    Code code = 1;
    // Payload (must be valid Protocol Buffers, based on given method).
    bytes payload = 2;
}

// Meta methods.
message MetadataRequest {
}

message MetadataResponse {
    // Contract name.
    string name = 1;
    // Contract version.
    string version = 2;
}

message ContractInitRequest {
    // Sealed keys if this enclave has previously been initialized.
    bytes sealed_keys = 1;
}

message ContractInitResponse {
    // Public key used to establish a secure channel with the enclave. This
    // key is generated as part of the contract initialization process
    bytes public_key = 1;
    // Sealed keys that should be persisted to the filesystem and used in
    // next enclave invocation.
    bytes sealed_keys = 2;
}

message AttestationInitRequest {
}

message AttestationInitResponse {
}
