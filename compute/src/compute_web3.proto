syntax = "proto3";

package compute_web3;

service Compute {
    // Contract interface.
    rpc CallContract (CallContractRequest) returns (CallContractResponse) {}

    // IAS proxy.
    rpc IasGetSpid (IasGetSpidRequest) returns (IasGetSpidResponse) {}
    rpc IasVerifyQuote (IasVerifyQuoteRequest) returns (IasVerifyQuoteResponse) {}
}

message CallContractRequest {
    // Raw contract request payload that will be passed to the
    // contract (Protocol Buffers serialized).
    bytes payload = 1;
}

message CallContractResponse {
    // Raw contract dependent response payload (Protocol Buffers serialized).
    bytes payload = 1;
}

// TODO: Unify IAS messages with enclave_services.proto.

message IasGetSpidRequest {
}

message IasGetSpidResponse {
    // 16-byte SPID used by the compute node.
    bytes spid = 1;
}

message IasVerifyQuoteRequest {
    // Quote to verify.
    bytes quote = 1;
    // Nonce.
    bytes nonce = 2;
}

message IasVerifyQuoteResponse {
    // HTTP response status code from IAS.
    enum Status {
        INVALID = 0;
        SUCCESS = 200;
        ERROR_BAD_REQUEST = 400;
        ERROR_UNAUTHORIZED = 401;
        ERROR_INTERNAL_SERVER_ERROR = 500;
        ERROR_SERVICE_UNAVAILABLE = 503;
    }

    // Attestation verification report fields. These should be used to independently
    // verify the IAS verification.
    Status status = 1;
    string body = 2;
    bytes signature = 3;
    string certificates = 4;
}
