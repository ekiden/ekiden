FROM ekiden/rust-sgx-sdk

ENV HOME="/root"
ENV PATH="${HOME}/.cargo/bin:${PATH}"
ENV INTEL_SGX_SDK="/opt/sgxsdk"
ENV RUST_SGX_SDK="/sgx"
ENV SGX_MODE="SIM"
ENV SGX_ARCH="x64"

# We need a newer version of python-protobuf than is available in the distro.
# Installing this stuff through pip also sidesteps the need to upgrade gcc.
RUN apt-get update # 20180204
RUN apt-get install -y --no-install-recommends python-pip
# Benchmarks don't run the evaluation, so no scipy or sklearn
RUN pip install numpy pandas xlrd protobuf

RUN git clone --branch v0.9.1 https://github.com/baidu/rust-sgx-sdk.git /sgx

# Copy code.
ADD . /code

# Build all Ekiden binaries and resources.
# TODO: Build in release mode.
RUN cd /code && \
    cargo make build-flow && \
    \
    cd /code/clients/token && \
    cargo build --features benchmark && \
    \
    cd /code/clients/ethtoken && \
    mv /code/target/debug/ethtoken-client /code/target/debug/ethtoken-client-orig && \
    cargo build --features "benchmark benchmark_transfer" && \
    mv /code/target/debug/ethtoken-client /code/target/debug/benchmark-ethtoken-transfer && \
    cargo build --features "benchmark benchmark_get_balance" && \
    mv /code/target/debug/ethtoken-client /code/target/debug/benchmark-ethtoken-get-balance && \
    \
    cd /code/compute && \
    mv /code/target/debug/compute /code/target/debug/compute-orig && \
    cargo build --features "no_diffs" && \
    mv /code/target/debug/compute /code/target/debug/compute-no_diffs && \
    cargo build --features "no_diffs no_cache" && \
    mv /code/target/debug/compute /code/target/debug/compute-no_diffs-no_cache && \
    \
    cd /code && \
    python2 clients/dp_credit_scoring/src/prep_data.py --api-proto contracts/dp_credit_scoring/api/src/generated/api_pb2.py > clients/dp_credit_scoring/prepped-data

# Package all binaries and resources.
RUN mkdir -p /package/bin /package/lib /package/res && \
    cp /code/target/enclave/*.signed.so /package/lib && \
    cp /code/target/enclave/*.mrenclave /package/lib && \
    cp /code/target/debug/compute-orig /package/bin/compute && \
    cp /code/target/debug/compute-no_diffs /package/bin && \
    cp /code/target/debug/compute-no_diffs-no_cache /package/bin && \
    cp /code/target/debug/consensus /package/bin && \
    cp /code/target/debug/token-client /package/bin && \
    cp /code/target/debug/ethtoken-client-orig /package/bin/ethtoken-client && \
    cp /code/target/debug/benchmark-token-transfer /package/bin && \
    cp /code/target/debug/benchmark-token-get-balance /package/bin && \
    cp /code/target/debug/benchmark-ethtoken-transfer /package/bin && \
    cp /code/target/debug/benchmark-ethtoken-get-balance /package/bin && \
    cp /code/target/debug/benchmark-dp-credit-scoring-train /package/bin && \
    cp /code/target/debug/benchmarkdp-credit-scoring-infer /package/bin && \
    cp /code/clients/dp_credit_scoring/prepped-data /package/res/dp_credit_scoring-prepped-data && \
    cp /code/docker/deployment/Dockerfile.runtime /package/Dockerfile

# This is a builder container which outputs the contents of the package
# on standard output. This enables the runtime and the builder container
# to be different and reduces the image size considerably.
WORKDIR /package
CMD tar cvzhf - .
